{"version":3,"file":"component---src-pages-index-js-5325cb3a68f1584f963d.js","mappings":"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","sources":["webpack://evaluator-4000/./src/components/Form.jsx","webpack://evaluator-4000/./src/pages/Home.jsx","webpack://evaluator-4000/./src/pages/index.js"],"sourcesContent":["import React, { Fragment, useCallback, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useIntl } from 'gatsby-plugin-react-intl';\r\nimport { useFormik } from 'formik';\r\nimport { Button, Typography } from '@material-ui/core'; // FormControl\r\n\r\n// Hooks\r\nimport { useDispatch } from '../store/StoreProvider';\r\n\r\n// Components\r\nimport FormikInput from './FormikInput';\r\n\r\n// Utils\r\nimport { isClient } from '../utils/utils';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    inputSection: {\r\n        width: '100%',\r\n        display: 'flex',\r\n        overflow: 'auto',\r\n        justifyContent: 'space-between',\r\n        paddingBottom: '20px',\r\n    },\r\n    inputsWrapper: {\r\n        minWidth: '400px',\r\n        marginRight: '15px',\r\n    },\r\n    sectionWrapper: {\r\n        marginTop: '20px',\r\n    },\r\n    slideWrapper: () => {\r\n        let height = 700;\r\n        if (isClient()) {\r\n            height = window.innerHeight - 240;\r\n        }\r\n\r\n        return {\r\n            // maxWidth: '75%',\r\n            maxHeight: `${height}px`,\r\n            overflowY: 'auto',\r\n        };\r\n    },\r\n}));\r\n\r\nconst Form = ({\r\n    years = [],\r\n    initialValues = {},\r\n}) => {\r\n    const intl = useIntl();\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const [isFormSubmitted, setIsFormSubmitted] = useState(false);\r\n\r\n    const formik = useFormik({\r\n        // initialValues: testValues || {},\r\n        enableReinitialize: true,\r\n        initialValues,\r\n        onSubmit: (values) => {\r\n            // TODO\r\n        },\r\n        validate: (values, props) => {\r\n            // TODO\r\n        },\r\n    });\r\n\r\n    const onIframeLoad = useCallback(() => {\r\n        // https://stackoverflow.com/a/8558731\r\n        if (isFormSubmitted) {\r\n            // setSnackbarMessage('your_comment_submitted', SUCCESS_MESSAGE_TYPE);\r\n            window.location = window.location.href;\r\n        }\r\n    }, [isFormSubmitted]);\r\n\r\n    const onFormSubmit = useCallback(() => {\r\n        setIsFormSubmitted(true);\r\n    }, [setIsFormSubmitted]);\r\n\r\n    const googleFormId = '1FAIpQLSfwAlROYKP26dDOBES3M0mW5VljeI1MMv04yBeIYzO8oo189g';\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className={classes.slideWrapper}>\r\n                <iframe\r\n                    title=\"hidden_iframe\"\r\n                    name=\"hidden_iframe\"\r\n                    id=\"hidden_iframe\"\r\n                    style={{ display: 'none' }}\r\n                    onLoad={onIframeLoad}\r\n                />\r\n                <div className={classes.sectionWrapper}>\r\n                    <Typography\r\n                        color=\"textPrimary\"\r\n                        variant=\"h4\"\r\n                    >\r\n                        {intl.formatMessage({ id: 'builder.details' })}\r\n                    </Typography>\r\n                    <div className={classes.inputSection}>\r\n                        <div\r\n                            className={classes.inputsWrapper}\r\n                        >\r\n                            <FormikInput\r\n                                rows={1}\r\n                                onChange={formik.handleChange}\r\n                                name=\"name\"\r\n                                value={formik.values?.name}\r\n                                error={(formik.errors?.name)}\r\n                            />\r\n                            <FormikInput\r\n                                rows={1}\r\n                                onChange={formik.handleChange}\r\n                                name=\"email\"\r\n                                value={formik.values?.email}\r\n                                error={(formik.errors?.email)}\r\n                            />\r\n                            <FormikInput\r\n                                rows={1}\r\n                                onChange={formik.handleChange}\r\n                                name=\"phone\"\r\n                                value={formik.values?.phone}\r\n                                error={(formik.errors?.phone)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className={classes.sectionWrapper}>\r\n                    <Typography\r\n                        color=\"textPrimary\"\r\n                        variant=\"h4\"\r\n                    >\r\n                        {intl.formatMessage({ id: 'builder.revenue' })}\r\n                    </Typography>\r\n                    <div className={classes.inputSection}>\r\n                        {years.map((year, idx) => (\r\n                            <div\r\n                                key={year}\r\n                                className={classes.inputsWrapper}\r\n                            >\r\n                                <Typography\r\n                                    color=\"textPrimary\"\r\n                                    variant=\"h5\"\r\n                                >\r\n                                    {year}\r\n                                </Typography>\r\n                                <FormikInput\r\n                                    rows={1}\r\n                                    onChange={formik.handleChange}\r\n                                    name={`${year}.numberOfRooms`}\r\n                                    value={formik.values?.[year]?.numberOfRooms}\r\n                                    error={(formik.errors?.[year]?.numberOfRooms)}\r\n                                />\r\n                                <FormikInput\r\n                                    rows={1}\r\n                                    onChange={formik.handleChange}\r\n                                    name={`${year}.annualAverageOccupancyRate`}\r\n                                    value={formik.values?.[year]?.annualAverageOccupancyRate}\r\n                                    error={(formik.errors?.[year]?.annualAverageOccupancyRate)}\r\n                                    type=\"percentage\"\r\n                                />\r\n                                <FormikInput\r\n                                    rows={1}\r\n                                    onChange={formik.handleChange}\r\n                                    name={`${year}.annualAveragePricePerRoom`}\r\n                                    value={formik.values?.[year]?.annualAveragePricePerRoom}\r\n                                    error={(formik.errors?.[year]?.annualAveragePricePerRoom)}\r\n                                    type=\"percentage\"\r\n                                />\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n                <div className={classes.sectionWrapper}>\r\n                    <Typography\r\n                        color=\"textPrimary\"\r\n                        variant=\"h4\"\r\n                    >\r\n                        {intl.formatMessage({ id: 'builder.expenses' })}\r\n                    </Typography>\r\n                    <div className={classes.inputSection}>\r\n                        {years.map((year, idx) => (\r\n                            <div\r\n                                key={year}\r\n                                className={classes.inputsWrapper}\r\n                            >\r\n                                <Typography\r\n                                    color=\"textPrimary\"\r\n                                    variant=\"h5\"\r\n                                >\r\n                                    {year}\r\n                                </Typography>\r\n                                <FormikInput\r\n                                    rows={1}\r\n                                    onChange={formik.handleChange}\r\n                                    name={`${year}.waterAndSewage`}\r\n                                    value={formik.values?.[year]?.waterAndSewage}\r\n                                    error={(formik.errors?.[year]?.waterAndSewage)}\r\n                                    type=\"currency\"\r\n                                />\r\n                                <FormikInput\r\n                                    rows={1}\r\n                                    onChange={formik.handleChange}\r\n                                    name={`${year}.gas`}\r\n                                    value={formik.values?.[year]?.gas}\r\n                                    error={(formik.errors?.[year]?.gas)}\r\n                                    type=\"currency\"\r\n                                />\r\n                                <FormikInput\r\n                                    rows={1}\r\n                                    onChange={formik.handleChange}\r\n                                    name={`${year}.electricity`}\r\n                                    value={formik.values?.[year]?.electricity}\r\n                                    error={(formik.errors?.[year]?.electricity)}\r\n                                    type=\"currency\"\r\n                                />\r\n                                <FormikInput\r\n                                    rows={1}\r\n                                    onChange={formik.handleChange}\r\n                                    name={`${year}.landlinePhone`}\r\n                                    value={formik.values?.[year]?.landlinePhone}\r\n                                    error={(formik.errors?.[year]?.landlinePhone)}\r\n                                    type=\"currency\"\r\n                                />\r\n                                <FormikInput\r\n                                    rows={1}\r\n                                    onChange={formik.handleChange}\r\n                                    name={`${year}.cellphone`}\r\n                                    value={formik.values?.[year]?.cellphone}\r\n                                    error={(formik.errors?.[year]?.cellphone)}\r\n                                    type=\"currency\"\r\n                                />\r\n                                <FormikInput\r\n                                    rows={1}\r\n                                    onChange={formik.handleChange}\r\n                                    name={`${year}.internet`}\r\n                                    value={formik.values?.[year]?.internet}\r\n                                    error={(formik.errors?.[year]?.internet)}\r\n                                    type=\"currency\"\r\n                                />\r\n                                <FormikInput\r\n                                    rows={1}\r\n                                    onChange={formik.handleChange}\r\n                                    name={`${year}.cableTv`}\r\n                                    value={formik.values?.[year]?.cableTv}\r\n                                    error={(formik.errors?.[year]?.cableTv)}\r\n                                    type=\"currency\"\r\n                                />\r\n                                <FormikInput\r\n                                    rows={1}\r\n                                    onChange={formik.handleChange}\r\n                                    name={`${year}.insurance`}\r\n                                    value={formik.values?.[year]?.insurance}\r\n                                    error={(formik.errors?.[year]?.insurance)}\r\n                                    type=\"currency\"\r\n                                />\r\n                                <FormikInput\r\n                                    rows={1}\r\n                                    onChange={formik.handleChange}\r\n                                    name={`${year}.security`}\r\n                                    value={formik.values?.[year]?.security}\r\n                                    error={(formik.errors?.[year]?.security)}\r\n                                    type=\"currency\"\r\n                                />\r\n                                <FormikInput\r\n                                    rows={1}\r\n                                    onChange={formik.handleChange}\r\n                                    name={`${year}.accountingServices`}\r\n                                    value={formik.values?.[year]?.accountingServices}\r\n                                    error={(formik.errors?.[year]?.accountingServices)}\r\n                                    type=\"currency\"\r\n                                />\r\n                                <FormikInput\r\n                                    rows={1}\r\n                                    onChange={formik.handleChange}\r\n                                    name={`${year}.lawServices`}\r\n                                    value={formik.values?.[year]?.lawServices}\r\n                                    error={(formik.errors?.[year]?.lawServices)}\r\n                                    type=\"currency\"\r\n                                />\r\n                                <FormikInput\r\n                                    rows={1}\r\n                                    onChange={formik.handleChange}\r\n                                    name={`${year}.handlingAgentServices`}\r\n                                    value={formik.values?.[year]?.handlingAgentServices}\r\n                                    error={(formik.errors?.[year]?.handlingAgentServices)}\r\n                                    type=\"currency\"\r\n                                />\r\n                                <FormikInput\r\n                                    rows={1}\r\n                                    onChange={formik.handleChange}\r\n                                    name={`${year}.iptu`}\r\n                                    value={formik.values?.[year]?.iptu}\r\n                                    error={(formik.errors?.[year]?.iptu)}\r\n                                    type=\"currency\"\r\n                                />\r\n                                <FormikInput\r\n                                    rows={1}\r\n                                    onChange={formik.handleChange}\r\n                                    name={`${year}.otherFees`}\r\n                                    value={formik.values?.[year]?.otherFees}\r\n                                    error={(formik.errors?.[year]?.otherFees)}\r\n                                    type=\"currency\"\r\n                                />\r\n                                <FormikInput\r\n                                    rows={1}\r\n                                    onChange={formik.handleChange}\r\n                                    name={`${year}.marketingServices`}\r\n                                    value={formik.values?.[year]?.marketingServices}\r\n                                    error={(formik.errors?.[year]?.marketingServices)}\r\n                                    type=\"currency\"\r\n                                />\r\n                                <FormikInput\r\n                                    rows={1}\r\n                                    onChange={formik.handleChange}\r\n                                    name={`${year}.softwareServices`}\r\n                                    value={formik.values?.[year]?.softwareServices}\r\n                                    error={(formik.errors?.[year]?.softwareServices)}\r\n                                    type=\"currency\"\r\n                                />\r\n                                <FormikInput\r\n                                    rows={1}\r\n                                    onChange={formik.handleChange}\r\n                                    name={`${year}.onlineSalesCommission`}\r\n                                    value={formik.values?.[year]?.onlineSalesCommission}\r\n                                    error={(formik.errors?.[year]?.onlineSalesCommission)}\r\n                                    type=\"currency\"\r\n                                />\r\n                                <FormikInput\r\n                                    rows={1}\r\n                                    onChange={formik.handleChange}\r\n                                    name={`${year}.otherSalesCommission`}\r\n                                    value={formik.values?.[year]?.otherSalesCommission}\r\n                                    error={(formik.errors?.[year]?.otherSalesCommission)}\r\n                                    type=\"currency\"\r\n                                />\r\n                                <FormikInput\r\n                                    rows={1}\r\n                                    onChange={formik.handleChange}\r\n                                    name={`${year}.laundry`}\r\n                                    value={formik.values?.[year]?.laundry}\r\n                                    error={(formik.errors?.[year]?.laundry)}\r\n                                    type=\"currency\"\r\n                                />\r\n                                <FormikInput\r\n                                    rows={1}\r\n                                    onChange={formik.handleChange}\r\n                                    name={`${year}.bakery`}\r\n                                    value={formik.values?.[year]?.bakery}\r\n                                    error={(formik.errors?.[year]?.bakery)}\r\n                                    type=\"currency\"\r\n                                />\r\n                                <FormikInput\r\n                                    rows={1}\r\n                                    onChange={formik.handleChange}\r\n                                    name={`${year}.supermarket`}\r\n                                    value={formik.values?.[year]?.supermarket}\r\n                                    error={(formik.errors?.[year]?.supermarket)}\r\n                                    type=\"currency\"\r\n                                />\r\n                                <FormikInput\r\n                                    rows={1}\r\n                                    onChange={formik.handleChange}\r\n                                    name={`${year}.wages`}\r\n                                    value={formik.values?.[year]?.wages}\r\n                                    error={(formik.errors?.[year]?.wages)}\r\n                                    type=\"currency\"\r\n                                />\r\n                                <FormikInput\r\n                                    rows={1}\r\n                                    onChange={formik.handleChange}\r\n                                    name={`${year}.generalMaintenance`}\r\n                                    value={formik.values?.[year]?.generalMaintenance}\r\n                                    error={(formik.errors?.[year]?.generalMaintenance)}\r\n                                    type=\"currency\"\r\n                                />\r\n                                <FormikInput\r\n                                    rows={1}\r\n                                    onChange={formik.handleChange}\r\n                                    name={`${year}.otherExpenses`}\r\n                                    value={formik.values?.[year]?.otherExpenses}\r\n                                    error={(formik.errors?.[year]?.otherExpenses)}\r\n                                    type=\"currency\"\r\n                                />\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n                <div className={classes.sectionWrapper}>\r\n                    <Typography\r\n                        color=\"textPrimary\"\r\n                        variant=\"h4\"\r\n                    >\r\n                        {intl.formatMessage({ id: 'builder.variables' })}\r\n                    </Typography>\r\n                    <div className={classes.inputSection}>\r\n                        {years.map((year, idx) => (\r\n                            <div\r\n                                key={year}\r\n                                className={classes.inputsWrapper}\r\n                            >\r\n                                <Typography\r\n                                    color=\"textPrimary\"\r\n                                    variant=\"h5\"\r\n                                >\r\n                                    {year}\r\n                                </Typography>\r\n                                <FormikInput\r\n                                    rows={1}\r\n                                    onChange={formik.handleChange}\r\n                                    name={`${year}.occupancyRateIncreaseYoY`}\r\n                                    value={formik.values?.[year]?.occupancyRateIncreaseYoY}\r\n                                    error={(formik.errors?.[year]?.occupancyRateIncreaseYoY)}\r\n                                    type=\"percentage\"\r\n                                />\r\n                                <FormikInput\r\n                                    rows={1}\r\n                                    onChange={formik.handleChange}\r\n                                    name={`${year}.pricePerRoomIncreaseYoY`}\r\n                                    value={formik.values?.[year]?.pricePerRoomIncreaseYoY}\r\n                                    error={(formik.errors?.[year]?.pricePerRoomIncreaseYoY)}\r\n                                    type=\"currency\"\r\n                                />\r\n                                <FormikInput\r\n                                    rows={1}\r\n                                    onChange={formik.handleChange}\r\n                                    name={`${year}.taxStructure`}\r\n                                    value={formik.values?.[year]?.taxStructure}\r\n                                    error={(formik.errors?.[year]?.taxStructure)}\r\n                                    options={['mei', 'other']}\r\n                                />\r\n                                <FormikInput\r\n                                    rows={1}\r\n                                    onChange={formik.handleChange}\r\n                                    name={`${year}.averageSalesCommissionRate`}\r\n                                    value={formik.values?.[year]?.averageSalesCommissionRate}\r\n                                    error={(formik.errors?.[year]?.averageSalesCommissionRate)}\r\n                                    type=\"percentage\"\r\n                                />\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <form\r\n                action={`https://docs.google.com/forms/d/e/${googleFormId}/formResponse`}\r\n                onSubmit={onFormSubmit}\r\n                target=\"hidden_iframe\"\r\n                method=\"post\"\r\n            >\r\n                <input\r\n                    name=\"entry.1483962846\"\r\n                    type=\"text\"\r\n                    style={{ display: 'none' }}\r\n                    value={JSON.stringify(formik.values)}\r\n                />\r\n                <Button\r\n                    // onClick={() => console.log(formik.values)}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                >\r\n                    Submit\r\n                </Button>\r\n            </form>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default Form;\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useIntl } from 'gatsby-plugin-react-intl';\r\nimport { Button } from '@material-ui/core';\r\nimport csvtojson from 'csvtojson';\r\n\r\n// Components\r\nimport SEO from '../components/SEO';\r\nimport Layout from '../components/Layout';\r\nimport Form from '../components/Form';\r\n\r\n// Utils\r\nimport { isClient } from '../utils/utils';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    buttonsWrapper: {\r\n        textAlign: 'right',\r\n        padding: '20px',\r\n    },\r\n}));\r\n\r\nconst HomePage = () => {\r\n    const intl = useIntl();\r\n    const classes = useStyles();\r\n    const [years, setYears] = useState([(new Date()).getFullYear()]);\r\n    const [initialValues, setInitialValues] = useState({});\r\n    const personalInfoFields = ['name', 'email', 'phone'];\r\n\r\n    const handleAddYear = useCallback(() => {\r\n        setYears([\r\n            ...years,\r\n            years[years.length - 1] - 1,\r\n        ].sort((a, b) => b - a));\r\n    }, [years]);\r\n\r\n    useEffect(() => {\r\n        const getDataFromSpreadsheet = async () => {\r\n            const urlParams = new URLSearchParams(window.location.search);\r\n            const userId = urlParams.get('userId') || 0;\r\n            const spreadsheetId = urlParams.get('spreadsheetId');\r\n\r\n            if (!spreadsheetId) {\r\n                return;\r\n            }\r\n\r\n            const response = await fetch(\r\n                `https://docs.google.com/spreadsheets/d/e/${spreadsheetId}/pub?gid=1016831492&output=csv`, {\r\n                    method: 'GET',\r\n                }\r\n            );\r\n\r\n            const text = await response.text();\r\n            const json = await csvtojson({ output: 'csv' })\r\n                .fromString(text)\r\n                .then((csvRow) => csvRow);\r\n\r\n            const formValues = JSON.parse(json[userId][1]);\r\n            setInitialValues(formValues);\r\n            setYears(\r\n                Object.keys(formValues).filter(\r\n                    (name) => !personalInfoFields.includes(name)\r\n                ).sort((a, b) => b - a)\r\n            );\r\n        };\r\n\r\n        if (isClient()) {\r\n            getDataFromSpreadsheet();\r\n        }\r\n    }, [personalInfoFields]);\r\n\r\n    return (\r\n        <Layout>\r\n            <SEO\r\n                title={intl.formatMessage({ id: 'home' })}\r\n                robots=\"noindex, nofollow\"\r\n            />\r\n            <Button\r\n                onClick={handleAddYear}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n            >\r\n                Add year\r\n            </Button>\r\n            <Form\r\n                years={years}\r\n                initialValues={initialValues}\r\n            />\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default HomePage;\r\n","// This file only exists as a entry point for Gatsby\r\n// Since we're writing jsx and using airbnb ESLint rules\r\n// We should not write jsx into a .js file\r\nimport React from 'react';\r\nimport HomePage from './Home';\r\n\r\nconst gatsbyEntryPoint = () => (React.createElement(HomePage));\r\n\r\nexport default gatsbyEntryPoint;\r\n"],"names":["useStyles","makeStyles","theme","inputSection","width","display","overflow","justifyContent","paddingBottom","inputsWrapper","minWidth","marginRight","sectionWrapper","marginTop","slideWrapper","height","isClient","window","innerHeight","maxHeight","overflowY","years","initialValues","intl","useIntl","classes","isFormSubmitted","setIsFormSubmitted","useDispatch","useState","formik","useFormik","enableReinitialize","onSubmit","values","validate","props","onIframeLoad","useCallback","location","href","onFormSubmit","Fragment","className","title","name","id","style","onLoad","Typography","color","variant","formatMessage","FormikInput","rows","onChange","handleChange","value","error","errors","email","phone","map","year","idx","key","numberOfRooms","annualAverageOccupancyRate","type","annualAveragePricePerRoom","waterAndSewage","gas","electricity","landlinePhone","cellphone","internet","cableTv","insurance","security","accountingServices","lawServices","handlingAgentServices","iptu","otherFees","marketingServices","softwareServices","onlineSalesCommission","otherSalesCommission","laundry","bakery","supermarket","wages","generalMaintenance","otherExpenses","occupancyRateIncreaseYoY","pricePerRoomIncreaseYoY","taxStructure","options","averageSalesCommissionRate","action","target","method","JSON","stringify","Button","buttonsWrapper","textAlign","padding","setYears","Date","getFullYear","setInitialValues","personalInfoFields","handleAddYear","length","sort","a","b","useEffect","getDataFromSpreadsheet","urlParams","URLSearchParams","search","userId","get","spreadsheetId","response","fetch","text","json","csvtojson","output","fromString","then","csvRow","formValues","parse","Object","keys","filter","includes","Layout","SEO","robots","onClick","React","HomePage"],"sourceRoot":""}